version: "3"
services:
  #Mysql database service
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: recruitmentsystem
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  #Kafka and Zookeeper services
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  # Prometheus Configuration
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
        - "9090:9090"
    volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - api-gateway
      - service-discovery
#      - user-service
      - auth-service
#      - jobpost-service
#      - notification-service
#      - organization-service
#      - screening-service
#      - resume-service
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
        - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
          GF_SECURITY_ADMIN_USER: admin
          GF_SECURITY_ADMIN_PASSWORD: admin
    depends_on:
        - prometheus

  #Microservices
  service-discovery:
    image: recruitment-system/service-discovery:latest
    container_name: service-discovery
    restart: unless-stopped
    ports:
      - "8761:8761"
    depends_on:
      - mysql-db

  auth-service:
    image: recruitment-system/auth-service:latest
    container_name: auth-service
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      - mysql-db
      - service-discovery
      - kafka

volumes:
  grafana-storage:

